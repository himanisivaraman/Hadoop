import java.io.IOException;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;

public class Driver 
{
	public static void main(String[] args) throws IOException,ClassNotFoundException, InterruptedException 
	{

		Configuration conf = new Configuration();
		Job job = new Job(conf, "Evenodd");  
		
		job.setJarByClass(Driver.class);
		job.setMapperClass(HaMapper.class);
		job.setReducerClass(HaReducer.class);
		job.setMapOutputKeyClass(Text.class);
		job.setMapOutputValueClass(IntWrâ€¦

Mapper:
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;

public class HaMapper extends Mapper<LongWritable, Text, Text, IntWritable> 
{

	
	public void map(LongWritable key, Text value, Context context)throws java.io.IOException, InterruptedException
	{
		String data[]=value.toString().split(",");    
		
	
		for(String num:data)
		{
			int number=Integer.parseInt(num);
			if((number%2)==0)
			{
				context.write(new Text("EVEN"), new IntWritable(number));
			}

			}
					
		}
	}
Reducer
import java.io.IOException;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;

public class HaReducer extends Reducer<Text, IntWritable, Text, IntWritable> 
{
	
	
	
	public void reduce(Text key, Iterable<IntWritable> values, Context context)	throws IOException, InterruptedException
	{
		int sum = 0;
		if(key.equals("ODD"))
		{
			for (IntWritable value : values)
			{
				sum = sum+ value.get();
			}
		}
		else
		{
			for (IntWritable value : values)
			{
				sum = sum+ value.get();
		}
		
		}
		context.write(key,new IntWritable(sum));;
	}
}